import path from 'node:path'
import { chromium, type FullConfig } from '@playwright/test'

import { environment } from './utils'

const authFile = path.join(__dirname, './.auth/user.json')

async function globalSetup(config: FullConfig): Promise<void> {
  const { baseURL } = config.projects[0].use

  console.info(`üìå Base URL: "${baseURL}"`)

  if (!baseURL) {
    console.error('‚ùå Base URL is required')
    process.exit(1)
  }

  //* –ì–æ—Ç–æ–≤–∏–º –±—Ä–∞—É–∑–µ—Ä
  const browser = await chromium.launch()
  const context = await browser.newContext()
  const page = await context.newPage()

  /**
   * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
   */
  // –ü–µ—Ä–µ–π—Ç–∏ –≤ –ú–ö (—Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ https://sso-test.o3.ru/)
  await page.goto(baseURL)

  //* –ü–æ–ª—É—á–∏–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã SSO
  // const loginInput = page.locator('[type=text]')
  // const passwordInput = page.locator('[type=password]')
  // const submitButton = page.locator('[name=login]')

  //* –ó–∞–ø–æ–ª–Ω–∏–º —Ñ–æ—Ä–º—É
  // await loginInput.fill(environment.getLogin())
  // await passwordInput.fill(environment.getPassword())

  //* –û—Ç–ø—Ä–∞–≤–∏–º —Ñ–æ—Ä–º—É
  // await submitButton.click()

  //* –ñ–¥–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
  await page.waitForURL(/^[^#]+$/)

  await page.context().storageState({
    path: authFile,
  })
}

export default globalSetup
